<Activity mc:Ignorable="sap sap2010" x:Class="GetCredentials" this:GetCredentials.in_Credential="TestRobot-Credential" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:p="http://schemas.uipath.com/workflow/activities/credentials" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ss="clr-namespace:System.Security;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_Username" Type="OutArgument(x:String)" />
    <x:Property Name="in_Credential" Type="InArgument(x:String)" />
    <x:Property Name="out_Password" Type="OutArgument(ss:SecureString)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>912,2011</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>GetCredentials_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>CredentialManagement</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Credentials.Activities</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Runtime.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>TimeSpan2</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>CredentialManagement</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Credentials.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <TryCatch sap2010:Annotation.AnnotationText="使用法: in_Credential に以前に作成された Orchestrator のアセットまたは Windows の資格情報を設定し、出力される out_Username および out_Password を使用します。説明: このワークフローでは、資格情報セットをデータ ソースから安全に取得するか、作成して使用します。最初に Orchestrator からの取得が試行され、失敗した場合は、Windows Credential Manager からの取得が試行されます。資格情報が存在しない場合は作成して出力します。" DisplayName="プライベート: 資格情報アセットの取得をトライ" sap:VirtualizedContainerService.HintSize="510,1946" sap2010:WorkflowViewState.IdRef="TryCatch_2">
    <TryCatch.Variables>
      <Variable x:TypeArguments="x:String" Name="stringPassword" />
    </TryCatch.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch.Try>
      <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="[in_Credential]" DisplayName="Orchestrator の資格情報を取得" sap:VirtualizedContainerService.HintSize="508,80" sap2010:WorkflowViewState.IdRef="GetRobotCredential_2" Password="[out_Password]" Username="[out_Username]" />
    </TryCatch.Try>
    <TryCatch.Catches>
      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="764.8,1360.8" sap2010:WorkflowViewState.IdRef="Catch`1_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ActivityAction x:TypeArguments="s:Exception">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
          </ActivityAction.Argument>
          <If Condition="[out_Username is Nothing or out_Password is Nothing]" DisplayName="プライベート: ローカル データを取得" sap:VirtualizedContainerService.HintSize="508,1526" sap2010:WorkflowViewState.IdRef="If_4">
            <If.Then>
              <Sequence DisplayName="プライベート: 資格情報ストアから取得" sap:VirtualizedContainerService.HintSize="506,1400" sap2010:WorkflowViewState.IdRef="Sequence_6">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:Boolean" Name="credentialFound" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <p:GetSecureCredential CredentialType="Generic" DisplayName="Get Secure Credentials" sap:VirtualizedContainerService.HintSize="472,112" sap2010:WorkflowViewState.IdRef="GetSecureCredential_2" Password="[out_Password]" PersistanceType="Enterprise" Result="[credentialFound]" Target="[in_Credential]" Username="[out_Username]" />
                <If Condition="[credentialFound]" DisplayName="ローカルに見つかった場合" sap:VirtualizedContainerService.HintSize="472,1228" sap2010:WorkflowViewState.IdRef="If_3">
                  <If.Then>
                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="470,89" sap2010:WorkflowViewState.IdRef="Sequence_10">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="プライベート: 資格情報を要求して保存" sap:VirtualizedContainerService.HintSize="520,1204" sap2010:WorkflowViewState.IdRef="Sequence_5">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <p:RequestCredential PasswordSecureString="{x:Null}" DisplayName="Request Credentials" sap:VirtualizedContainerService.HintSize="486,57" sap2010:WorkflowViewState.IdRef="RequestCredential_3" Message="[&quot;Please provide &quot;&quot;&quot; + in_Credential + &quot;&quot;&quot; access credentials&quot;]" Password="[stringPassword]" Result="[credentialFound]" Title="Hello! This is Robot" Username="[out_Username]" />
                      <If Condition="[Not credentialFound]" DisplayName="キャンセルされた場合" sap:VirtualizedContainerService.HintSize="486,693" sap2010:WorkflowViewState.IdRef="If_6">
                        <If.Then>
                          <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="484,256" sap2010:WorkflowViewState.IdRef="Sequence_11">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Sequence DisplayName="シーケンス" sap:VirtualizedContainerService.HintSize="450,196" sap2010:WorkflowViewState.IdRef="Sequence_13">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Throw DisplayName="資格情報なしとスロー" Exception="[new Exception(&quot;Credentials not supplied&quot;)]" sap:VirtualizedContainerService.HintSize="416,113" sap2010:WorkflowViewState.IdRef="Throw_1" />
                            </Sequence>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="484,299" sap2010:WorkflowViewState.IdRef="Sequence_12">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Sequence DisplayName="シーケンス" sap:VirtualizedContainerService.HintSize="450,239" sap2010:WorkflowViewState.IdRef="Sequence_14">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <p:AddCredential PasswordSecureString="{x:Null}" CredentialType="Generic" DisplayName="Add Credentials" sap:VirtualizedContainerService.HintSize="416,156" sap2010:WorkflowViewState.IdRef="AddCredential_3" Password="[stringPassword]" PersistanceType="Enterprise" Target="[in_Credential]" Username="[out_Username]" />
                            </Sequence>
                          </Sequence>
                        </If.Else>
                      </If>
                      <Assign DisplayName="セキュアなパスワードを作成" sap:VirtualizedContainerService.HintSize="486,114" sap2010:WorkflowViewState.IdRef="Assign_15">
                        <Assign.To>
                          <OutArgument x:TypeArguments="ss:SecureString">[out_Password]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="ss:SecureString">[new SecureString()]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:ForEach x:TypeArguments="x:Char" CurrentIndex="{x:Null}" DisplayName="繰り返し (コレクションの各要素) &lt;char&gt;" sap:VirtualizedContainerService.HintSize="436,280" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[stringPassword.ToCharArray]">
                        <ui:ForEach.Body>
                          <ActivityAction x:TypeArguments="x:Char">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:Char" Name="key" />
                            </ActivityAction.Argument>
                            <InvokeMethod DisplayName="AppendChar を呼び出し" sap:VirtualizedContainerService.HintSize="217.6,132.8" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="AppendChar">
                              <InvokeMethod.TargetObject>
                                <InArgument x:TypeArguments="ss:SecureString">[out_Password]</InArgument>
                              </InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="x:Char">[key]</InArgument>
                            </InvokeMethod>
                          </ActivityAction>
                        </ui:ForEach.Body>
                      </ui:ForEach>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence DisplayName="Else" sap2010:WorkflowViewState.IdRef="Sequence_9" />
            </If.Else>
          </If>
        </ActivityAction>
      </Catch>
    </TryCatch.Catches>
    <TryCatch.Finally>
      <Sequence DisplayName="戻る" sap:VirtualizedContainerService.HintSize="508,89" sap2010:WorkflowViewState.IdRef="Sequence_8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Sequence>
    </TryCatch.Finally>
  </TryCatch>
</Activity>